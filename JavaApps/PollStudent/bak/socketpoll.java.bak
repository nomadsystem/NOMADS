import java.net.*;
import java.io.*;
import java.applet.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import nomads.*;
import java.util.*;
import java.lang.*;

// Writes bytes and Messages seperately

public class socketpoll extends JApplet implements ItemListener, ActionListener
{
    //socket stuff
	private Socket socket              = null;
    // private DataInputStream  streamIn   = null;  // created in thread
    private DataOutputStream streamOut = null;
    private PollThread client    = null;
    private static String previousQuestion = "";
    private String    serverName = "nomad.music.virginia.edu";
    private int       serverPort = 52807;

	JCheckBox one, two, three, four, five, six, seven, eight, nine, ten;
	JCheckBox yes, no;
	JLabel question, title;
	JPanel bottom;
	JPanel oneToTen, wholeThing;
	
	// background color for applet
	Color BG = new Color(191, 140, 44);
	Color BG2 = new Color(145, 106, 65);
	    
    //the question to pose. taken from teacher's app.
    String toBePosed = "";
    
    Byte SANDnumber = 00;
    String temp = "";
    
    String currentQuestionType = "";
    
    //just for gui making purposes, delete later
    String q = "";

	Color[] theColors = new Color[11];
	
	public void init()
	{
		// topmost container. It will hold wholeThing, which is the applet
		setLayout(new BorderLayout());		
    	
    	//the whole applet
        wholeThing = new JPanel (new GridLayout(4,1));
    	wholeThing.setBackground(BG2);
    	
    	theColors[0] = new Color(0,0,0); //dummy so array indices line up
        theColors[1] = new Color(94,41,28); //muddy red = no understanding
        theColors[2] = new Color(158,55,33);
        theColors[3] = new Color(145,86,65);
        theColors[4] = new Color(187,137,44);
        theColors[5] = new Color(191,140,44);
        theColors[6] = new Color(233,158,37);
        theColors[7] = new Color(242,197,126);
        theColors[8] = new Color(254,205,129);
        theColors[9] = new Color(249,241,131);
        theColors[10] = new Color(249,245,220); //light yellow = full understanding
        
        // holds the selection options for one to ten questions, and yes no options
        oneToTen = new JPanel(new FlowLayout());
     
		question = new JLabel("", JLabel.CENTER);
		question.setBackground(BG2);
		
		//placeholder for app title
		title = new JLabel("<html><h1 style='color:black;font-size:125%'>Gathering of Understanding: A NOMADS Poll</h1></html>", JLabel.CENTER);
		
		//placeholder for bottom of grid layout
		bottom = new JPanel(new FlowLayout());
		
		//one to ten options 
		one = new JCheckBox("1");
		two = new JCheckBox("2");
		three = new JCheckBox("3");
		four = new JCheckBox("4");
		five = new JCheckBox("5");
		six = new JCheckBox("6");
		seven = new JCheckBox("7");
		eight = new JCheckBox("8");
		nine = new JCheckBox("9");
		ten = new JCheckBox("10");
		 
		//yes no options
		yes = new JCheckBox("Yes");
		no = new JCheckBox("No");
		
		// listeners
		one.addActionListener(this);
		two.addActionListener(this);
		three.addActionListener(this);
		four.addActionListener(this);
		five.addActionListener(this);
		six.addActionListener(this);
		seven.addActionListener(this);
		eight.addActionListener(this);
		nine.addActionListener(this);
		ten.addActionListener(this);		
		
		yes.addActionListener(this);
		no.addActionListener(this);
		
		//oneToTen holds the options
		
		oneToTen.setBackground(BG2);
		bottom.setBackground(BG);
		
		wholeThing.add(title);
		wholeThing.add(question);
		wholeThing.add(oneToTen);
		wholeThing.add(bottom);
		
		add(wholeThing, BorderLayout.CENTER);
		
		connect(serverName, serverPort);
		
		}
	
	public void connect(String serverName, int serverPort)
    {  	
        boolean d = true;
		
		try 
		 {  
	    	socket = new Socket(serverName, serverPort);   
		    open(); 
		 }
	    catch(UnknownHostException uhe) 
	     {  	    
            d = false;    
		 }
	    catch(IOException ioe) 
	     {  	    
            d = false;
	  	 }
	}
	

	public void start () {
	}
	
	
	public void open()
	{
		try
		{
			streamOut = new DataOutputStream(socket.getOutputStream());
			// streamIn = new DataInputStream(socket.getInputStream());
			client = new PollThread(this, socket);
			streamOut.writeByte(app_id.STUDENT_POLL);
   			streamOut.writeUTF("");
			System.out.println("socketpoll is open");
		}
		catch(IOException ioe)
		{
			System.out.println("Error opening output stream:" + ioe);
		}
	}
	
	public void close()
	{
		try
		{
		streamOut.writeByte(app_id.STUDENT_POLL);
		streamOut.writeUTF(".bye");    
		streamOut.flush();
		  if (streamOut != null)
		  	streamOut.close();
		  if (socket != null)
		  	socket.close();
		 }
		 catch(IOException ioe)
		 {
		   System.out.println("Error closing " + ioe);
		 }
		 
		 client.close();
		 client.stop();
     }
      
      //read poll information from teacherpoll app
      public void handle(Byte sandByte, String s)
      {	 
      	 System.out.println("****************");
      	 System.out.println("socketpoll handle method");
      	 SANDnumber = sandByte;
      	 System.out.println("sandByte: " + sandByte);
      	 
      	 temp = "";
      	 toBePosed = "";
      	 String questionType = "";
      	 //String qTypeANDtoBePosed = "";
      	 
      	 System.out.println("s " + s);
      	 
      	if (previousQuestion.equals(s)) {
    		return;
    	}
      	 
      	 previousQuestion = new String(s);
      	 
      	 //parse the SANDnumber and qTypeANDtoBePosed
      	 /*for (int i = 0; i < s.length(); i++)
      	 {
      	 	temp = s.substring(i,i+1);
      	 	if (temp.equalsIgnoreCase(":"))
      	 	{
      	 		//SANDnumber = s.substring(i+2, i+4);
      	 		qTypeANDtoBePosed = s.substring(i+4);
  				break;
      	 	}
      	 }
      	 
      	 System.out.println("SANDnumber " + SANDnumber);
      	 System.out.println("qTypeANDtoBePosed " + qTypeANDtoBePosed);
      	 */
      	 //temp = "";
      	 
      	 
      	 
      	 //if this string was sent from the teacher poll
      	 if (SANDnumber == app_id.TEACHER_POLL)
      	 {	 
      	 	 // parse the questionType and the question toBePosed from String s
      	 	for (int j = 0; j < s.length(); j++)
      	 	{
      	 		temp = s.substring(j,j+1);
      	 		if (temp.equalsIgnoreCase(";"))
      	 		{
      	 			questionType = s.substring(0,j);
      	 			toBePosed = s.substring(j+1);
      	 			break;
      	 		}
      	 	 }
      	 
      		 System.out.println("questionType " + questionType);
      	 	 System.out.println("toBePosed " + toBePosed);
      	 	 
      	 	 //clear old result color
//      	 	 bottom.setBackground(BG);
      	 	 
      	 	 //set the question type
      	 	 if (questionType.equalsIgnoreCase("Yes-No"))
      	 	 {
      	 	 	 if (currentQuestionType.equalsIgnoreCase(""))
      	 	 	 {
      	 	 	 	// gui is blank
      	 	 	 	// add the options
      	 	 	 	oneToTen.add(yes);
      	 	 	 	oneToTen.add(no);
      	 	 	 	
      	 	 	 	yes.setEnabled(true);
   					no.setEnabled(true);
      	 	 	 	
      	 	 	 	// refresh the options
      	 	 		yes.setSelected(false);
      	 	 		no.setSelected(false);
      	 	 	 	
      	 	 	 	//refresh the gui
      	 	 		oneToTen.revalidate();
      	 	 		oneToTen.repaint();
      	 	 		
      	 	 		currentQuestionType = "Yes-No";
      	 	 	 }
      	 	 	 
      	 	 	 if (currentQuestionType.equalsIgnoreCase(questionType))
      	 	 	 {
      	 	 		// gui is already set to display yes no question type
      	 	 		
      	 	 		// refresh the options
      	 	 		yes.setEnabled(true);
   					no.setEnabled(true);
      	 	 		yes.setSelected(false);
      	 	 		no.setSelected(false);
      	 	 		
      	 	 	 }
      	 	 	
      	 	 	 if (currentQuestionType.equalsIgnoreCase("Scale of 1 to 10"))
      	 	 	 {
      	 	 		// out with the old
      	 	 		oneToTen.remove(one);
      	 	 		oneToTen.remove(two);
      	 	 		oneToTen.remove(three);
      	 	 		oneToTen.remove(four);
      	 	 		oneToTen.remove(five);
      	 	 		oneToTen.remove(six);
      	 	 		oneToTen.remove(seven);
      	 	 		oneToTen.remove(eight);
      	 	 		oneToTen.remove(nine);
      	 	 		oneToTen.remove(ten);
      	 	 	
      	 	 		// in with the new
      	 	 		oneToTen.add(yes);
      	 	 		oneToTen.add(no);
      	 	 		
      	 	 		// refresh the options
      	 	 		yes.setEnabled(true);
   					no.setEnabled(true);
      	 	 		yes.setSelected(false);
      	 	 		no.setSelected(false);
      	 	 	
      	 	 		//refresh the gui
      	 	 		oneToTen.revalidate();
      	 	 		oneToTen.repaint();
      	 	 		
      	 	 		currentQuestionType = "Yes-No";
      	 	      }
      	     }
      	 	 
      	 	 if (questionType.equalsIgnoreCase("Scale of 1 to 10"))
      	 	 {
      	 	 	if (currentQuestionType.equalsIgnoreCase(""))
      	 	 	 {
      	 	 	 	// gui is blank
      	 	 	 	// add the options
      	 	 	 	oneToTen.add(one);
					oneToTen.add(two);
					oneToTen.add(three);
					oneToTen.add(four);
					oneToTen.add(five);
					oneToTen.add(six);
					oneToTen.add(seven);
					oneToTen.add(eight);
					oneToTen.add(nine);
					oneToTen.add(ten);
					
					// refresh the options
					one.setEnabled(true);
					two.setEnabled(true);
					three.setEnabled(true);
					four.setEnabled(true);
					five.setEnabled(true);
					six.setEnabled(true);
					seven.setEnabled(true);
					eight.setEnabled(true);
					nine.setEnabled(true);
					ten.setEnabled(true);
					
      	 	 		one.setSelected(false);
	   	     		two.setSelected(false);
	         		three.setSelected(false);
			        four.setSelected(false);
			        five.setSelected(false);
			        six.setSelected(false);
	         		seven.setSelected(false);
	 	  	      	eight.setSelected(false);
			        nine.setSelected(false);
	        		ten.setSelected(false);	
      	 	 	 	
      	 	 	 	//refresh the gui
      	 	 		oneToTen.revalidate();
      	 	 		oneToTen.repaint();
      	 	 		
      	 	 		currentQuestionType = "Scale of 1 to 10";
      	 	 	 }
      	 	 	
      	 	 	if (currentQuestionType.equalsIgnoreCase(questionType))
      	 	 	 {
      	 	 		// gui is already set to display scale of one to ten question
      	 	 		
      	 	 		// refresh the options
      	 	 		one.setEnabled(true);
					two.setEnabled(true);
					three.setEnabled(true);
					four.setEnabled(true);
					five.setEnabled(true);
					six.setEnabled(true);
					seven.setEnabled(true);
					eight.setEnabled(true);
					nine.setEnabled(true);
					ten.setEnabled(true);
      	 	 		
      	 	 		one.setSelected(false);
	   	     		two.setSelected(false);
	         		three.setSelected(false);
			        four.setSelected(false);
			        five.setSelected(false);
			        six.setSelected(false);
	         		seven.setSelected(false);
	 	  	      	eight.setSelected(false);
			        nine.setSelected(false);
	        		ten.setSelected(false);	
      	 	 	 }
      	 	 	 
      	 	 	 if (currentQuestionType.equalsIgnoreCase("Yes-No"))
      	 	 	 {
      	 	 		// out with the old
      	 	 		oneToTen.remove(yes);
      	 	 		oneToTen.remove(no);
      	 	 		
      	 	 		// in with the new
      	 	 		oneToTen.add(one);
					oneToTen.add(two);
					oneToTen.add(three);
					oneToTen.add(four);
					oneToTen.add(five);
					oneToTen.add(six);
					oneToTen.add(seven);
					oneToTen.add(eight);
					oneToTen.add(nine);
					oneToTen.add(ten);
					
					// refresh the options
					one.setEnabled(true);
					two.setEnabled(true);
					three.setEnabled(true);
					four.setEnabled(true);
					five.setEnabled(true);
					six.setEnabled(true);
					seven.setEnabled(true);
					eight.setEnabled(true);
					nine.setEnabled(true);
					ten.setEnabled(true); 
					
      	 	 		one.setSelected(false);
	   	     		two.setSelected(false);
	         		three.setSelected(false);
			        four.setSelected(false);
			        five.setSelected(false);
			        six.setSelected(false);
	         		seven.setSelected(false);
	 	  	      	eight.setSelected(false);
			        nine.setSelected(false);
	        		ten.setSelected(false);	
					
					//refresh the gui
      	 	 		oneToTen.revalidate();
      	 	 		oneToTen.repaint();
      	 	 		
      	 	 		currentQuestionType = "Scale of 1 to 10";
      	 	 	 }
      	 	 
      	 	 }
      	 	 
      	 	 //set the question to be posed
	      	 question.setText("<html><h2 style='color:black;font-size:125%'>" + toBePosed + "</h2></html>");
	      	 
      	 }
      	 else
      	 {
      	 	System.out.println("Socketpoll says extraneous information");
      	 }
      	 
      	 System.out.println("Leaving socketpoll handle method");      	 
      }
	
	
	// to make the compiler happy
   public void itemStateChanged(java.awt.event.ItemEvent ie){
   }
   
   public void actionPerformed(java.awt.event.ActionEvent ae)
   {
   		Object source = ae.getSource();
   		
   		if (source == yes)
   		{
   			yes.setSelected(true);
   			no.setSelected(false);
   			//Disable after you choose
   			yes.setEnabled(false);
   			no.setEnabled(false);
   			
   			//show results with color
   			bottom.setBackground(theColors[10]);
   			
   			try
   			{	
   				System.out.println("WRITING YES");
   				streamOut.writeByte(app_id.STUDENT_POLL);
   				streamOut.writeUTF("yes");
   				streamOut.flush();
   				System.out.println("IT WAS WRITTEN");
   			}
   			catch (IOException ioe)
   			{
   			}
   		}
   		
   		if (source == no)
   		{
   			yes.setSelected(false);
   			no.setSelected(true);
   			//Disable after you choose
   			yes.setEnabled(false);
   			no.setEnabled(false);
   			//show results with color
   			bottom.setBackground(theColors[1]);
   			
   			try
   			{	
   				System.out.println("WRITING NO");
   				streamOut.writeByte(app_id.STUDENT_POLL);
   				streamOut.writeUTF("no");
   				streamOut.flush();
   				System.out.println("IT WAS WRITTEN");
   			}
   			catch (IOException ioe)
   			{
   			}
   		}
   		
   		if (source == one)
   		{
			one.setSelected(true);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        
	 
	       //show understanding with color
	       bottom.setBackground(theColors[1]);
	       
	      	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("1");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
   		}
   		
   		if (source == two)
   		{
   			one.setSelected(false);
	   	    two.setSelected(true);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[2]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("2");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == three)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(true);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[3]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("3");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == four)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(true);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[4]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("4");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == five)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(true);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[5]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("5");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == six)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(true);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[6]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("6");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == seven)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(true);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[7]);
	       
	       	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("7");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == eight)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(true);
	        nine.setSelected(false);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[8]);
	       
	      	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("8");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == nine)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(true);
	        ten.setSelected(false);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[9]);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("9");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		
   		if (source == ten)
   		{
   			one.setSelected(false);
	   	    two.setSelected(false);
	        three.setSelected(false);
	        four.setSelected(false);
	        five.setSelected(false);
	        six.setSelected(false);
	        seven.setSelected(false);
	        eight.setSelected(false);
	        nine.setSelected(false);
	        ten.setSelected(true);
	        
	        //show understanding with color
	       bottom.setBackground(theColors[10]);
	       
	      	one.setEnabled(false);
	        two.setEnabled(false);
	        three.setEnabled(false);
	        four.setEnabled(false);
	        five.setEnabled(false);
	        six.setEnabled(false);
	        seven.setEnabled(false);
	        eight.setEnabled(false);
	        nine.setEnabled(false);
	        ten.setEnabled(false);
	       
	       try
	       {
	       	  streamOut.writeByte(app_id.STUDENT_POLL);
	       	  streamOut.writeUTF("10");
	       	  streamOut.flush();
	       }
	       catch (IOException ioe)
	       {   
	       }
	        
   		}
   		  		
   }
	
	
}
